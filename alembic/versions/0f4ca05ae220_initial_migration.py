"""Initial migration

Revision ID: 0f4ca05ae220
Revises:
Create Date: 2025-09-08 20:39:59.318016

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0f4ca05ae220"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dropdown_values",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("value", sa.String(length=100), nullable=False),
        sa.Column("display_order", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_dropdown_values_category"),
        "dropdown_values",
        ["category"],
        unique=False,
    )
    op.create_table(
        "risks",
        sa.Column("risk_id", sa.String(length=12), nullable=False),
        sa.Column("risk_title", sa.String(length=100), nullable=False),
        sa.Column("risk_category", sa.String(length=50), nullable=False),
        sa.Column("risk_description", sa.String(length=400), nullable=False),
        sa.Column("inherent_probability", sa.Integer(), nullable=False),
        sa.Column("inherent_impact", sa.Integer(), nullable=False),
        sa.Column("inherent_risk_rating", sa.Integer(), nullable=False),
        sa.Column("current_probability", sa.Integer(), nullable=False),
        sa.Column("current_impact", sa.Integer(), nullable=False),
        sa.Column("current_risk_rating", sa.Integer(), nullable=False),
        sa.Column("risk_status", sa.String(length=20), nullable=False),
        sa.Column("risk_response_strategy", sa.String(length=20), nullable=False),
        sa.Column("planned_mitigations", sa.String(length=200), nullable=True),
        sa.Column("preventative_controls_status", sa.String(length=20), nullable=False),
        sa.Column(
            "preventative_controls_description", sa.String(length=150), nullable=True
        ),
        sa.Column("detective_controls_status", sa.String(length=20), nullable=False),
        sa.Column(
            "detective_controls_description", sa.String(length=150), nullable=True
        ),
        sa.Column("corrective_controls_status", sa.String(length=20), nullable=False),
        sa.Column(
            "corrective_controls_description", sa.String(length=150), nullable=True
        ),
        sa.Column("control_gaps", sa.String(length=150), nullable=True),
        sa.Column("risk_owner", sa.String(length=50), nullable=False),
        sa.Column("risk_owner_department", sa.String(length=50), nullable=False),
        sa.Column("systems_affected", sa.String(length=150), nullable=True),
        sa.Column("technology_domain", sa.String(length=50), nullable=False),
        sa.Column("ibs_impact", sa.Boolean(), nullable=False),
        sa.Column("number_of_ibs_affected", sa.Integer(), nullable=True),
        sa.Column("business_criticality", sa.String(length=20), nullable=False),
        sa.Column(
            "financial_impact_low", sa.Numeric(precision=12, scale=2), nullable=True
        ),
        sa.Column(
            "financial_impact_high", sa.Numeric(precision=12, scale=2), nullable=True
        ),
        sa.Column("rto_hours", sa.Integer(), nullable=True),
        sa.Column("rpo_hours", sa.Integer(), nullable=True),
        sa.Column("sla_impact", sa.String(length=100), nullable=True),
        sa.Column("slo_impact", sa.String(length=100), nullable=True),
        sa.Column("date_identified", sa.Date(), nullable=False),
        sa.Column("last_reviewed", sa.Date(), nullable=False),
        sa.Column("next_review_date", sa.Date(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("risk_id"),
    )
    op.create_index(op.f("ix_risks_risk_id"), "risks", ["risk_id"], unique=False)
    op.create_table(
        "risk_updates",
        sa.Column("update_id", sa.String(length=15), nullable=False),
        sa.Column("risk_id", sa.String(length=12), nullable=False),
        sa.Column("update_date", sa.Date(), nullable=False),
        sa.Column("updated_by", sa.String(length=50), nullable=False),
        sa.Column("update_type", sa.String(length=50), nullable=False),
        sa.Column("update_summary", sa.String(length=300), nullable=False),
        sa.Column("previous_risk_rating", sa.String(length=20), nullable=True),
        sa.Column("new_risk_rating", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["risk_id"],
            ["risks.risk_id"],
        ),
        sa.PrimaryKeyConstraint("update_id"),
    )
    op.create_index(
        op.f("ix_risk_updates_risk_id"), "risk_updates", ["risk_id"], unique=False
    )
    op.create_index(
        op.f("ix_risk_updates_update_id"), "risk_updates", ["update_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_risk_updates_update_id"), table_name="risk_updates")
    op.drop_index(op.f("ix_risk_updates_risk_id"), table_name="risk_updates")
    op.drop_table("risk_updates")
    op.drop_index(op.f("ix_risks_risk_id"), table_name="risks")
    op.drop_table("risks")
    op.drop_index(op.f("ix_dropdown_values_category"), table_name="dropdown_values")
    op.drop_table("dropdown_values")
    # ### end Alembic commands ###
